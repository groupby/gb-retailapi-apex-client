/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * GbRetailApiProductDtoRating
 */
public class GbRetailApiProductDtoRating implements GbRetailApiRating {
    /**
     * The total number of ratings. This value is independent of the value of histogram.This value must be nonnegative.
     * @return ratingCount
     */
    public Integer ratingCount { get; set; }

    /**
     * The average rating of the product. The rating is scaled at 1-5.
     * @return averageRating
     */
    public Double averageRating { get; set; }

    /**
     * List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. For example, [41, 14, 13, 47, 303]. It means that the product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.
     * @return ratingHistogram
     */
    public List<Integer> ratingHistogram { get; set; }

    public GbRetailApiProductDtoRating() {
        ratingHistogram = new List<Integer>();
    }

    public static GbRetailApiProductDtoRating getExample() {
        GbRetailApiProductDtoRating productDtoRating = new GbRetailApiProductDtoRating();
          productDtoRating.ratingCount = 5;
          productDtoRating.averageRating = 4.5;
          productDtoRating.ratingHistogram = new List<Integer>{0};
        return productDtoRating;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiProductDtoRating) {           
            GbRetailApiProductDtoRating productDtoRating = (GbRetailApiProductDtoRating) obj;
            return this.ratingCount == productDtoRating.ratingCount
                && this.averageRating == productDtoRating.averageRating
                && this.ratingHistogram == productDtoRating.ratingHistogram;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (ratingCount == null ? 0 : System.hashCode(ratingCount));
        hashCode = (17 * hashCode) + (averageRating == null ? 0 : System.hashCode(averageRating));
        hashCode = (17 * hashCode) + (ratingHistogram == null ? 0 : System.hashCode(ratingHistogram));
        return hashCode;
    }
}

