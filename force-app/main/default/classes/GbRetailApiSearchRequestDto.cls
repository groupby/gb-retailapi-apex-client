/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Request that should be populated to configure a search API call, made by the client on behalf of a shopper.
 */
public class GbRetailApiSearchRequestDto {
    /**
     * Base textual search query.
     * @return query
     */
    public String query { get; set; }

    /**
     * Area name the search is being performed in.
     * @return area
     */
    public String area { get; set; }

    /**
     * Name of collection in project configuration setting which is mapped to the google retail backend.
     * @return collection
     */
    public String collection { get; set; }

    /**
     * Unique identifier identifying the shopper. Will be autogenerated if not provided.
     * @return visitorId
     */
    public String visitorId { get; set; }

    /**
     * Get refinements
     * @return refinements
     */
    public List<GbRetailApiSelectedRefinementDto> refinements { get; set; }

    /**
     * The number of products to be returned on each page.
     * minimum: 0
     * @return pageSize
     */
    public Integer pageSize { get; set; }

    /**
     * Where in the list of products to begin the page.
     * minimum: 0
     * @return skip
     */
    public Long skip { get; set; }

    /**
     * Name of a biasing profile which should be applied to the search. Takes priority over area default.
     * @return biasingProfile
     */
    public String biasingProfile { get; set; }

    /**
     * Get biasing
     * @return biasing
     */
    public GbRetailApiBiasingProfileDto biasing { get; set; }

    /**
     * Get customUrlParams
     * @return customUrlParams
     */
    public List<GbRetailApiCustomParameterDto> customUrlParams { get; set; }

    /**
     * Get sorts
     * @return sorts
     */
    public List<GbRetailApiSortDto> sorts { get; set; }

    /**
     * Set of navigation fields to include in the search result. Cannot be set if \'excludedNavigations\' is set.
     * @return includedNavigations
     */
    public List<String> includedNavigations { get; set; }

    /**
     * Set of navigation fields to exclude in the search result. Cannot be set if \'includedNavigations\' is set.
     * @return excludedNavigations
     */
    public List<String> excludedNavigations { get; set; }

    /**
     * Set the specifications of dynamically generated facets.
     * @return dynamicFacet
     */
    public Boolean dynamicFacet { get; set; }

    /**
     * Set the variant rollup keys.
     * @return variantRollupKeys
     */
    public List<String> variantRollupKeys { get; set; }

    /**
     * Set of the prefilter specifications value.
     * @return preFilter
     */
    public String preFilter { get; set; }

    /**
     * Name of site filter. If not specified, the specified area\'s default site will be applied if configured in Command Center. To not use default specify empty value i.e."".  If the site doesn\'t exist then the search will execute without the site filter and a warning will be provided.
     * @return site
     */
    public String site { get; set; }

    /**
     * List with fields which should be included in metadata object associated with each record in response.
     * @return responseMask
     */
    public List<String> responseMask { get; set; }

    /**
     * The categories associated with a category page. Required for category navigation queries to achieve good search quality. To represent full path of category, use \'>\' sign to separate different hierarchies. If \'>\' is part of the category name, please replace it with other character(s).Max item length = 1.
     * @return pageCategories
     */
    public List<String> pageCategories { get; set; }

    /**
     * Get spellCorrectionMode
     * @return spellCorrectionMode
     */
    public GbRetailApiSpellCorrectionMode spellCorrectionMode { get; set; }

    /**
     * When a shopper uses an ambiguous or a multi-word search phrase, they can get an empty response. After turning on include expanded results, Retail Search analyzes the request and returns the expanded list of products based on the parsed search query. For example, if you search "Google Pixel 5" without query expansion, you might only get "google_pixel_5" in the result. With query expansion, you might get "google_pixel_4a_with_5g", "google_pixel_4a" and "google_pixel_5_case" as well.The default value is configured in the tenant settings or true if there is no such setting
     * @return includeExpandedResults
     */
    public Boolean includeExpandedResults { get; set; }

    /**
     * This configuration depends on include expanded results settings. If this field is set to true,unexpanded products are always at the top of the search results, followed  by the expanded results. Default value: true
     * @return pinUnexpandedResults
     */
    public Boolean pinUnexpandedResults { get; set; }

    /**
     * Enable additional debug info in response.\n\nNote: attaching debug info significantly affects performance.\nIs not supposed to be used for large requests.\n\n
     * @return debug
     */
    public Boolean debug { get; set; }

    /**
     * Maximum of facet values that should be returned for this facet. If not specified, defaults to 20.\nThe maximum allowed value is 300. Values above 300 will be coerced to 300.\n\nIf this field is negative, an INVALID_ARGUMENT is returned.\n\nThis limit (300) is configured on Google side, but Google have an ability to change it for specific project.\n
     * @return facetLimit
     */
    public Integer facetLimit { get; set; }

    /**
     * Highly recommended for logged-in users. Unique identifier for logged-in user,\nsuch as a user name. Don\'t set for anonymous users.\n\nDon\'t set the field to the same fixed ID for different users. This mixes\nthe event history of those users together, which results in degraded\nmodel quality.\n\nThe field must be a UTF-8 encoded string with a length limit of 128\ncharacters.\n
     * @return loginId
     */
    public String loginId { get; set; }

    /**
     * Get overwrites
     * @return overwrites
     */
    public GbRetailApiSearchRequestDtoOverwrite overwrites { get; set; }

    public GbRetailApiSearchRequestDto() {
        area = 'Production';
        collection = 'default';
        refinements = new List<GbRetailApiSelectedRefinementDto>();
        pageSize = 10;
        skip = 0L;
        customUrlParams = new List<GbRetailApiCustomParameterDto>();
        sorts = new List<GbRetailApiSortDto>();
        includedNavigations = new List<String>();
        excludedNavigations = new List<String>();
        variantRollupKeys = new List<String>();
        responseMask = new List<String>();
        pageCategories = new List<String>();
    }

    public static GbRetailApiSearchRequestDto getExample() {
        GbRetailApiSearchRequestDto searchRequestDto = new GbRetailApiSearchRequestDto();
          searchRequestDto.query = 'blue sweater';
          searchRequestDto.area = 'Production';
          searchRequestDto.collection = 'productsClothing';
          searchRequestDto.visitorId = '38400000-8cf0-11bd-b23e-10b96e40000d';
          searchRequestDto.refinements = new List<GbRetailApiSelectedRefinementDto>{GbRetailApiSelectedRefinementDto.getExample()};
          searchRequestDto.pageSize = 25;
          searchRequestDto.skip = 50L;
          searchRequestDto.biasingProfile = '';
          searchRequestDto.biasing = GbRetailApiBiasingProfileDto.getExample();
          searchRequestDto.customUrlParams = new List<GbRetailApiCustomParameterDto>{GbRetailApiCustomParameterDto.getExample()};
          searchRequestDto.sorts = new List<GbRetailApiSortDto>{GbRetailApiSortDto.getExample()};
          searchRequestDto.includedNavigations = new List<String>{''};
          searchRequestDto.excludedNavigations = new List<String>{''};
          searchRequestDto.dynamicFacet = true;
          searchRequestDto.variantRollupKeys = new List<String>{''};
          searchRequestDto.preFilter = '(categories:ANY("Men")) AND (ageGroups:ANY("adult")) AND (price: IN(150, 200))';
          searchRequestDto.site = '';
          searchRequestDto.responseMask = new List<String>{''};
          searchRequestDto.pageCategories = new List<String>{''};
          searchRequestDto.spellCorrectionMode = GbRetailApiSpellCorrectionMode.getExample();
          searchRequestDto.includeExpandedResults = true;
          searchRequestDto.pinUnexpandedResults = true;
          searchRequestDto.debug = true;
          searchRequestDto.facetLimit = 0;
          searchRequestDto.loginId = '';
          searchRequestDto.overwrites = GbRetailApiSearchRequestDtoOverwrite.getExample();
        return searchRequestDto;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiSearchRequestDto) {           
            GbRetailApiSearchRequestDto searchRequestDto = (GbRetailApiSearchRequestDto) obj;
            return this.query == searchRequestDto.query
                && this.area == searchRequestDto.area
                && this.collection == searchRequestDto.collection
                && this.visitorId == searchRequestDto.visitorId
                && this.refinements == searchRequestDto.refinements
                && this.pageSize == searchRequestDto.pageSize
                && this.skip == searchRequestDto.skip
                && this.biasingProfile == searchRequestDto.biasingProfile
                && this.biasing == searchRequestDto.biasing
                && this.customUrlParams == searchRequestDto.customUrlParams
                && this.sorts == searchRequestDto.sorts
                && this.includedNavigations == searchRequestDto.includedNavigations
                && this.excludedNavigations == searchRequestDto.excludedNavigations
                && this.dynamicFacet == searchRequestDto.dynamicFacet
                && this.variantRollupKeys == searchRequestDto.variantRollupKeys
                && this.preFilter == searchRequestDto.preFilter
                && this.site == searchRequestDto.site
                && this.responseMask == searchRequestDto.responseMask
                && this.pageCategories == searchRequestDto.pageCategories
                && this.spellCorrectionMode == searchRequestDto.spellCorrectionMode
                && this.includeExpandedResults == searchRequestDto.includeExpandedResults
                && this.pinUnexpandedResults == searchRequestDto.pinUnexpandedResults
                && this.debug == searchRequestDto.debug
                && this.facetLimit == searchRequestDto.facetLimit
                && this.loginId == searchRequestDto.loginId
                && this.overwrites == searchRequestDto.overwrites;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (query == null ? 0 : System.hashCode(query));
        hashCode = (17 * hashCode) + (area == null ? 0 : System.hashCode(area));
        hashCode = (17 * hashCode) + (collection == null ? 0 : System.hashCode(collection));
        hashCode = (17 * hashCode) + (visitorId == null ? 0 : System.hashCode(visitorId));
        hashCode = (17 * hashCode) + (refinements == null ? 0 : System.hashCode(refinements));
        hashCode = (17 * hashCode) + (pageSize == null ? 0 : System.hashCode(pageSize));
        hashCode = (17 * hashCode) + (skip == null ? 0 : System.hashCode(skip));
        hashCode = (17 * hashCode) + (biasingProfile == null ? 0 : System.hashCode(biasingProfile));
        hashCode = (17 * hashCode) + (biasing == null ? 0 : System.hashCode(biasing));
        hashCode = (17 * hashCode) + (customUrlParams == null ? 0 : System.hashCode(customUrlParams));
        hashCode = (17 * hashCode) + (sorts == null ? 0 : System.hashCode(sorts));
        hashCode = (17 * hashCode) + (includedNavigations == null ? 0 : System.hashCode(includedNavigations));
        hashCode = (17 * hashCode) + (excludedNavigations == null ? 0 : System.hashCode(excludedNavigations));
        hashCode = (17 * hashCode) + (dynamicFacet == null ? 0 : System.hashCode(dynamicFacet));
        hashCode = (17 * hashCode) + (variantRollupKeys == null ? 0 : System.hashCode(variantRollupKeys));
        hashCode = (17 * hashCode) + (preFilter == null ? 0 : System.hashCode(preFilter));
        hashCode = (17 * hashCode) + (site == null ? 0 : System.hashCode(site));
        hashCode = (17 * hashCode) + (responseMask == null ? 0 : System.hashCode(responseMask));
        hashCode = (17 * hashCode) + (pageCategories == null ? 0 : System.hashCode(pageCategories));
        hashCode = (17 * hashCode) + (spellCorrectionMode == null ? 0 : System.hashCode(spellCorrectionMode));
        hashCode = (17 * hashCode) + (includeExpandedResults == null ? 0 : System.hashCode(includeExpandedResults));
        hashCode = (17 * hashCode) + (pinUnexpandedResults == null ? 0 : System.hashCode(pinUnexpandedResults));
        hashCode = (17 * hashCode) + (debug == null ? 0 : System.hashCode(debug));
        hashCode = (17 * hashCode) + (facetLimit == null ? 0 : System.hashCode(facetLimit));
        hashCode = (17 * hashCode) + (loginId == null ? 0 : System.hashCode(loginId));
        hashCode = (17 * hashCode) + (overwrites == null ? 0 : System.hashCode(overwrites));
        return hashCode;
    }
}

