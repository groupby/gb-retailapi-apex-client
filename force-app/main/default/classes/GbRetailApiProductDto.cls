/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Product representation.
 */
public class GbRetailApiProductDto {
    /**
     * Relative path to product in Google Retail system.
     * @return name
     */
    public String name { get; set; }

    /**
     * Product id in Google Retail system.
     * @return id
     */
    public String id { get; set; }

    /**
     * Product type. Possible values: PRIMARY, VARIANT. If the product has variant list and the request specifies the variantIds, requested variants will be the first in the response.
     * @return type
     */
    public String type { get; set; }

    /**
     * Product ID that is primary in relation to the current one
     * @return primaryProductId
     */
    public String primaryProductId { get; set; }

    /**
     * The of the collection members when product type is COLLECTION
     * @return collectionMemberIds
     */
    public List<String> collectionMemberIds { get; set; }

    /**
     * Global Trade Item Number can be used by a company to uniquely identify all of its trade items.GTIN defines trade items as products or services that are priced, ordered or invoiced at any point in the supply chain.
     * @return gtin
     */
    public String gtin { get; set; }

    /**
     * Product categories (array).
     * @return categories
     */
    public List<String> categories { get; set; }

    /**
     * Product title.
     * @return title
     */
    public String title { get; set; }

    /**
     * Product brands.
     * @return brands
     */
    public List<String> brands { get; set; }

    /**
     * Product description.
     * @return description
     */
    public String description { get; set; }

    /**
     * Language of the title/description and other string attributes. Use language tags defined by [BCP 47][https://www.rfc-editor.org/rfc/bcp/bcp47.txt]. For product search this field is in use. It defaults to \'en-US\' if unset.
     * @return languageCode
     */
    public String languageCode { get; set; }

    /**
     * Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer.  Max entries count: 200. Length limit of 128 characters.
     * @return attributes
     */
    public Map<String, GbRetailApiProductCustomAttribute> attributes { get; set; }

    /**
     * Product tags (array).
     * @return tags
     */
    public List<String> tags { get; set; }

    /**
     * Get priceInfo
     * @return priceInfo
     */
    public GbRetailApiProductDtoPriceInfo priceInfo { get; set; }

    /**
     * Get rating
     * @return rating
     */
    public GbRetailApiProductDtoRating rating { get; set; }

    /**
     * Get availableTime
     * @return availableTime
     */
    public GbRetailApiProductDtoAvailableTime availableTime { get; set; }

    /**
     * The online availability of the product. Default to IN_STOCK
     * @return availability
     */
    public String availability { get; set; }

    /**
     * The available quantity of the item.
     * @return availableQuantity
     */
    public Integer availableQuantity { get; set; }

    /**
     * Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods.
     * @return fulfillmentInfos
     */
    public List<GbRetailApiFulfillmentInfo> fulfillmentInfos { get; set; }

    /**
     * Link to the appropriate product.
     * @return uri
     */
    public String uri { get; set; }

    /**
     * Product Image.
     * @return images
     */
    public List<GbRetailApiImage> images { get; set; }

    /**
     * Get audience
     * @return audience
     */
    public GbRetailApiProductDtoAudience audience { get; set; }

    /**
     * Get colorInfo
     * @return colorInfo
     */
    public GbRetailApiProductDtoColorInfo colorInfo { get; set; }

    /**
     * Product sizes (array).
     * @return sizes
     */
    public List<String> sizes { get; set; }

    /**
     * The material of the product. For example, \'leather\', \'wooden\'. A maximum of 20 values are allowed. Length limit of 128 characters
     * @return materials
     */
    public List<String> materials { get; set; }

    /**
     * The pattern or graphic print of the product. For example, \'striped\', \'polka dot\', \'paisley\'. A maximum of 20 values are allowed per product. Length limit of 128 characters.
     * @return patterns
     */
    public List<String> patterns { get; set; }

    /**
     * The condition of the product. Strongly encouraged to use the standardvalues: \'new\', \'refurbished\', \'used\'. A maximum of 5 values are allowed per product. Length limit of 128 characters.
     * @return conditions
     */
    public List<String> conditions { get; set; }

    /**
     * Get publishTime
     * @return publishTime
     */
    public GbRetailApiProductDtoPublishTime publishTime { get; set; }

    /**
     * Get retrievableFields
     * @return retrievableFields
     */
    public GbRetailApiProductDtoRetrievableFiel retrievableFields { get; set; }

    /**
     * The promotions applied to the product. A maximum of 10 values are allowed per product.
     * @return promotions
     */
    public List<GbRetailApiPromotion> promotions { get; set; }

    /**
     * If the product has variant list and the request specifies the variantIds, requested variants will be the first in the response.
     * @return variants
     */
    public List<GbRetailApiProductDto> variants { get; set; }

    public GbRetailApiProductDto() {
        collectionMemberIds = new List<String>();
        categories = new List<String>();
        brands = new List<String>();
        attributes = new Map<String, GbRetailApiProductCustomAttribute>();
        tags = new List<String>();
        fulfillmentInfos = new List<GbRetailApiFulfillmentInfo>();
        images = new List<GbRetailApiImage>();
        sizes = new List<String>();
        materials = new List<String>();
        patterns = new List<String>();
        conditions = new List<String>();
        promotions = new List<GbRetailApiPromotion>();
        variants = new List<GbRetailApiProductDto>();
    }

    public static GbRetailApiProductDto getExample() {
        GbRetailApiProductDto productDto = new GbRetailApiProductDto();
          productDto.name = 'projects/123456789012/locations/global/catalogs/default_catalog/branches/1/products/12345678901';
          productDto.id = '12345678901';
          productDto.type = 'VARIANT, PRIMARY';
          productDto.primaryProductId = '1234567';
          productDto.collectionMemberIds = new List<String>{''};
          productDto.gtin = '10614141999993';
          productDto.categories = new List<String>{''};
          productDto.title = 'Eastland Shoe Men\'s Yarmouth Boat Shoes';
          productDto.brands = new List<String>{''};
          productDto.description = 'Eastland Shoe recalls an age of timeless casual fashion with these leather boat shoes.';
          productDto.languageCode = 'en-US';
          productDto.attributes = new Map<String, GbRetailApiProductCustomAttribute>{'key'=>GbRetailApiProductCustomAttribute.getExample()};
          productDto.tags = new List<String>{''};
          productDto.priceInfo = GbRetailApiProductDtoPriceInfo.getExample();
          productDto.rating = GbRetailApiProductDtoRating.getExample();
          productDto.availableTime = GbRetailApiProductDtoAvailableTime.getExample();
          productDto.availability = 'IN_STOCK';
          productDto.availableQuantity = 10;
          productDto.fulfillmentInfos = new List<GbRetailApiFulfillmentInfo>{GbRetailApiFulfillmentInfo.getExample()};
          productDto.uri = 'https://s4r-apparel.groupby.cloud/product/Eastland-Shoe-Men\'s-Yarmouth-Boat-Shoes/2725066/94352309386';
          productDto.images = new List<GbRetailApiImage>{GbRetailApiImage.getExample()};
          productDto.audience = GbRetailApiProductDtoAudience.getExample();
          productDto.colorInfo = GbRetailApiProductDtoColorInfo.getExample();
          productDto.sizes = new List<String>{''};
          productDto.materials = new List<String>{''};
          productDto.patterns = new List<String>{''};
          productDto.conditions = new List<String>{''};
          productDto.publishTime = GbRetailApiProductDtoPublishTime.getExample();
          productDto.retrievableFields = GbRetailApiProductDtoRetrievableFiel.getExample();
          productDto.promotions = new List<GbRetailApiPromotion>{GbRetailApiPromotion.getExample()};
          productDto.variants = new List<GbRetailApiProductDto>{GbRetailApiProductDto.getExample()};
        return productDto;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiProductDto) {           
            GbRetailApiProductDto productDto = (GbRetailApiProductDto) obj;
            return this.name == productDto.name
                && this.id == productDto.id
                && this.type == productDto.type
                && this.primaryProductId == productDto.primaryProductId
                && this.collectionMemberIds == productDto.collectionMemberIds
                && this.gtin == productDto.gtin
                && this.categories == productDto.categories
                && this.title == productDto.title
                && this.brands == productDto.brands
                && this.description == productDto.description
                && this.languageCode == productDto.languageCode
                && this.attributes == productDto.attributes
                && this.tags == productDto.tags
                && this.priceInfo == productDto.priceInfo
                && this.rating == productDto.rating
                && this.availableTime == productDto.availableTime
                && this.availability == productDto.availability
                && this.availableQuantity == productDto.availableQuantity
                && this.fulfillmentInfos == productDto.fulfillmentInfos
                && this.uri == productDto.uri
                && this.images == productDto.images
                && this.audience == productDto.audience
                && this.colorInfo == productDto.colorInfo
                && this.sizes == productDto.sizes
                && this.materials == productDto.materials
                && this.patterns == productDto.patterns
                && this.conditions == productDto.conditions
                && this.publishTime == productDto.publishTime
                && this.retrievableFields == productDto.retrievableFields
                && this.promotions == productDto.promotions
                && this.variants == productDto.variants;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (primaryProductId == null ? 0 : System.hashCode(primaryProductId));
        hashCode = (17 * hashCode) + (collectionMemberIds == null ? 0 : System.hashCode(collectionMemberIds));
        hashCode = (17 * hashCode) + (gtin == null ? 0 : System.hashCode(gtin));
        hashCode = (17 * hashCode) + (categories == null ? 0 : System.hashCode(categories));
        hashCode = (17 * hashCode) + (title == null ? 0 : System.hashCode(title));
        hashCode = (17 * hashCode) + (brands == null ? 0 : System.hashCode(brands));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (languageCode == null ? 0 : System.hashCode(languageCode));
        hashCode = (17 * hashCode) + (attributes == null ? 0 : System.hashCode(attributes));
        hashCode = (17 * hashCode) + (tags == null ? 0 : System.hashCode(tags));
        hashCode = (17 * hashCode) + (priceInfo == null ? 0 : System.hashCode(priceInfo));
        hashCode = (17 * hashCode) + (rating == null ? 0 : System.hashCode(rating));
        hashCode = (17 * hashCode) + (availableTime == null ? 0 : System.hashCode(availableTime));
        hashCode = (17 * hashCode) + (availability == null ? 0 : System.hashCode(availability));
        hashCode = (17 * hashCode) + (availableQuantity == null ? 0 : System.hashCode(availableQuantity));
        hashCode = (17 * hashCode) + (fulfillmentInfos == null ? 0 : System.hashCode(fulfillmentInfos));
        hashCode = (17 * hashCode) + (uri == null ? 0 : System.hashCode(uri));
        hashCode = (17 * hashCode) + (images == null ? 0 : System.hashCode(images));
        hashCode = (17 * hashCode) + (audience == null ? 0 : System.hashCode(audience));
        hashCode = (17 * hashCode) + (colorInfo == null ? 0 : System.hashCode(colorInfo));
        hashCode = (17 * hashCode) + (sizes == null ? 0 : System.hashCode(sizes));
        hashCode = (17 * hashCode) + (materials == null ? 0 : System.hashCode(materials));
        hashCode = (17 * hashCode) + (patterns == null ? 0 : System.hashCode(patterns));
        hashCode = (17 * hashCode) + (conditions == null ? 0 : System.hashCode(conditions));
        hashCode = (17 * hashCode) + (publishTime == null ? 0 : System.hashCode(publishTime));
        hashCode = (17 * hashCode) + (retrievableFields == null ? 0 : System.hashCode(retrievableFields));
        hashCode = (17 * hashCode) + (promotions == null ? 0 : System.hashCode(promotions));
        hashCode = (17 * hashCode) + (variants == null ? 0 : System.hashCode(variants));
        return hashCode;
    }
}

