/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Object to wrap all recommendation request configs.
 */
public class GbRetailApiRecommendationsRequest implements OAS.MappedProperties {
    /**
     * Get collection
     * @return collection
     */
    public String collection { get; set; }

    /**
     * Get visitorId
     * @return visitorId
     */
    public String visitorId { get; set; }

    /**
     * Get r_limit
     * @return r_limit
     */
    public String r_limit { get; set; }

    /**
     * Get pageSize
     * @return pageSize
     */
    public String pageSize { get; set; }

    /**
     * Get eventType
     * @return eventType
     */
    public String eventType { get; set; }

    /**
     * Get loginId
     * @return loginId
     */
    public String loginId { get; set; }

    /**
     * Get productID
     * @return productID
     */
    public List<String> productID { get; set; }

    /**
     * Get fields
     * @return fields
     */
    public List<String> fields { get; set; }

    /**
     * Get filters
     * @return filters
     */
    public List<GbRetailApiFilter> filters { get; set; }

    /**
     * Get rawFilter
     * @return rawFilter
     */
    public String rawFilter { get; set; }

    /**
     * Get placement
     * @return placement
     */
    public String placement { get; set; }

    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * The default is true. If strictFiltering true only products that are within the scope of the filter specified. If false, relax the filtering so that the response may contain other products that are outside the scope of the filtering.
     * @return strictFiltering
     */
    public Boolean strictFiltering { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'limit' => 'r_limit'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public GbRetailApiRecommendationsRequest() {
        productID = new List<String>();
        fields = new List<String>();
        filters = new List<GbRetailApiFilter>();
    }

    public static GbRetailApiRecommendationsRequest getExample() {
        GbRetailApiRecommendationsRequest recommendationsRequest = new GbRetailApiRecommendationsRequest();
          recommendationsRequest.collection = '';
          recommendationsRequest.visitorId = '';
          recommendationsRequest.r_limit = '';
          recommendationsRequest.pageSize = '';
          recommendationsRequest.eventType = '';
          recommendationsRequest.loginId = '';
          recommendationsRequest.productID = new List<String>{''};
          recommendationsRequest.fields = new List<String>{''};
          recommendationsRequest.filters = new List<GbRetailApiFilter>{GbRetailApiFilter.getExample()};
          recommendationsRequest.rawFilter = '';
          recommendationsRequest.placement = '';
          recommendationsRequest.name = '';
          recommendationsRequest.strictFiltering = true;
        return recommendationsRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiRecommendationsRequest) {           
            GbRetailApiRecommendationsRequest recommendationsRequest = (GbRetailApiRecommendationsRequest) obj;
            return this.collection == recommendationsRequest.collection
                && this.visitorId == recommendationsRequest.visitorId
                && this.r_limit == recommendationsRequest.r_limit
                && this.pageSize == recommendationsRequest.pageSize
                && this.eventType == recommendationsRequest.eventType
                && this.loginId == recommendationsRequest.loginId
                && this.productID == recommendationsRequest.productID
                && this.fields == recommendationsRequest.fields
                && this.filters == recommendationsRequest.filters
                && this.rawFilter == recommendationsRequest.rawFilter
                && this.placement == recommendationsRequest.placement
                && this.name == recommendationsRequest.name
                && this.strictFiltering == recommendationsRequest.strictFiltering;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (collection == null ? 0 : System.hashCode(collection));
        hashCode = (17 * hashCode) + (visitorId == null ? 0 : System.hashCode(visitorId));
        hashCode = (17 * hashCode) + (r_limit == null ? 0 : System.hashCode(r_limit));
        hashCode = (17 * hashCode) + (pageSize == null ? 0 : System.hashCode(pageSize));
        hashCode = (17 * hashCode) + (eventType == null ? 0 : System.hashCode(eventType));
        hashCode = (17 * hashCode) + (loginId == null ? 0 : System.hashCode(loginId));
        hashCode = (17 * hashCode) + (productID == null ? 0 : System.hashCode(productID));
        hashCode = (17 * hashCode) + (fields == null ? 0 : System.hashCode(fields));
        hashCode = (17 * hashCode) + (filters == null ? 0 : System.hashCode(filters));
        hashCode = (17 * hashCode) + (rawFilter == null ? 0 : System.hashCode(rawFilter));
        hashCode = (17 * hashCode) + (placement == null ? 0 : System.hashCode(placement));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (strictFiltering == null ? 0 : System.hashCode(strictFiltering));
        return hashCode;
    }
}

