/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Error returned by the API.
 */
public class GbRetailApiErrorDto {
    /**
     * Identifier used for tracking purposes.
     * @return trackingId
     */
    public String trackingId { get; set; }

    /**
     * HTTP method of the API call which produced the error.
     * @return method
     */
    public String method { get; set; }

    /**
     * HTTP path of the API call which produced the error.
     * @return path
     */
    public String path { get; set; }

    /**
     * Error message.
     * @return message
     */
    public String message { get; set; }

    public static GbRetailApiErrorDto getExample() {
        GbRetailApiErrorDto errorDto = new GbRetailApiErrorDto();
          errorDto.trackingId = 'bb25d616-2cd7-44a1-8d11-27159f2aa03c';
          errorDto.method = 'POST';
          errorDto.path = '/api/v2/search';
          errorDto.message = 'Search request page size must be greater than or equal to 0.';
        return errorDto;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiErrorDto) {           
            GbRetailApiErrorDto errorDto = (GbRetailApiErrorDto) obj;
            return this.trackingId == errorDto.trackingId
                && this.method == errorDto.method
                && this.path == errorDto.path
                && this.message == errorDto.message;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (trackingId == null ? 0 : System.hashCode(trackingId));
        hashCode = (17 * hashCode) + (method == null ? 0 : System.hashCode(method));
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (message == null ? 0 : System.hashCode(message));
        return hashCode;
    }
}

