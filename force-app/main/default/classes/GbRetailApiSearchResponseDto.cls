/*
 * GroupBy Retail
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Response of calling the search API, including various elements of the original request context, matching records and general metadata relating to the results.
 */
public class GbRetailApiSearchResponseDto {
    /**
     * Unique identifier for the search.
     * @return id
     */
    public String id { get; set; }

    /**
     * Area Id the search was performed in.
     * @return area
     */
    public String area { get; set; }

    /**
     * Original search query.
     * @return query
     */
    public String query { get; set; }

    /**
     * Search query after any changes/corrections are done by the engine.
     * @return correctedQuery
     */
    public String correctedQuery { get; set; }

    /**
     * Name of the biasing profile which was used to bias products in the search results.
     * @return biasingProfile
     */
    public String biasingProfile { get; set; }

    /**
     * Id of the biasing profile which was used to bias products in the search results.
     * @return biasingProfileAppliedId
     */
    public Integer biasingProfileAppliedId { get; set; }

    /**
     * Get filter
     * @return filter
     */
    public String filter { get; set; }

    /**
     * Get originalRequest
     * @return originalRequest
     */
    public GbRetailApiSearchRequestDto originalRequest { get; set; }

    /**
     * The list of records that match the search.
     * @return records
     */
    public List<GbRetailApiRecordDto> records { get; set; }

    /**
     * The total number of products that match the search. If all products were filtered out on S4R site equals to 0.
     * @return totalRecordCount
     */
    public Long totalRecordCount { get; set; }

    /**
     * Get metadata
     * @return metadata
     */
    public GbRetailApiSearchMetadataDto metadata { get; set; }

    /**
     * Get pageInfo
     * @return pageInfo
     */
    public GbRetailApiPageInfoDto pageInfo { get; set; }

    /**
     * Get availableNavigation
     * @return availableNavigation
     */
    public List<GbRetailApiNavigationDto> availableNavigation { get; set; }

    /**
     * Get selectedNavigation
     * @return selectedNavigation
     */
    public List<GbRetailApiNavigationDto> selectedNavigation { get; set; }

    /**
     * URL to which the merchandiser should redirect the shopper to.
     * @return redirect
     */
    public String redirect { get; set; }

    /**
     * Get experiments
     * @return experiments
     */
    public List<GbRetailApiExperiment> experiments { get; set; }

    /**
     * Get template
     * @return template
     */
    public GbRetailApiTemplateDto template { get; set; }

    /**
     * True if the search yielded no results, otherwise false.
     * @return empty
     */
    public Boolean empty { get; set; }

    /**
     * Get siteParams
     * @return siteParams
     */
    public List<GbRetailApiMetadata> siteParams { get; set; }

    /**
     * Get debug
     * @return debug
     */
    public GbRetailApiDebugDto debug { get; set; }

    /**
     * Warning messages containing information about invalid products, etc.
     * @return warnings
     */
    public List<String> warnings { get; set; }

    /**
     * When a shopper uses an ambiguous or a multi-word search phrase, they can get an empty response. After turning on include expanded results, Retail Search analyzes the request and returns the expanded list of products based on the parsed search query. For example, if you search "Google Pixel 5" without query expansion, you might only get "google_pixel_5" in the result. With query expansion, you might get "google_pixel_4a_with_5g", "google_pixel_4a" and "google_pixel_5_case" as well.The default value is configured in the tenant settings or true if there is no such setting
     * @return includeExpandedResults
     */
    public Boolean includeExpandedResults { get; set; }

    /**
     * Maximum of facet values that should be returned for this facet. If not specified, defaults to 20.\nThe maximum allowed value is 300. Values above 300 will be coerced to 300.\n\nIf this field is negative, an INVALID_ARGUMENT is returned.\n\nThis limit (300) is configured on Google side, but Google have an ability to change it for specific project.\n
     * @return facetLimit
     */
    public Integer facetLimit { get; set; }

    /**
     * Get redirectMetadata
     * @return redirectMetadata
     */
    public List<GbRetailApiMetadata> redirectMetadata { get; set; }

    public GbRetailApiSearchResponseDto() {
        records = new List<GbRetailApiRecordDto>();
        availableNavigation = new List<GbRetailApiNavigationDto>();
        selectedNavigation = new List<GbRetailApiNavigationDto>();
        experiments = new List<GbRetailApiExperiment>();
        siteParams = new List<GbRetailApiMetadata>();
        warnings = new List<String>();
        redirectMetadata = new List<GbRetailApiMetadata>();
    }

    public static GbRetailApiSearchResponseDto getExample() {
        GbRetailApiSearchResponseDto searchResponseDto = new GbRetailApiSearchResponseDto();
          searchResponseDto.id = '1d7dc797-e1cb-49dc-8791-f2317a218f13';
          searchResponseDto.area = 'Production';
          searchResponseDto.query = 'blue swetter';
          searchResponseDto.correctedQuery = 'blue sweater';
          searchResponseDto.biasingProfile = 'Query';
          searchResponseDto.biasingProfileAppliedId = 1;
          searchResponseDto.filter = '';
          searchResponseDto.originalRequest = GbRetailApiSearchRequestDto.getExample();
          searchResponseDto.records = new List<GbRetailApiRecordDto>{GbRetailApiRecordDto.getExample()};
          searchResponseDto.totalRecordCount = 273L;
          searchResponseDto.metadata = GbRetailApiSearchMetadataDto.getExample();
          searchResponseDto.pageInfo = GbRetailApiPageInfoDto.getExample();
          searchResponseDto.availableNavigation = new List<GbRetailApiNavigationDto>{GbRetailApiNavigationDto.getExample()};
          searchResponseDto.selectedNavigation = new List<GbRetailApiNavigationDto>{GbRetailApiNavigationDto.getExample()};
          searchResponseDto.redirect = 'www.example.com/2021-deals';
          searchResponseDto.experiments = new List<GbRetailApiExperiment>{GbRetailApiExperiment.getExample()};
          searchResponseDto.template = GbRetailApiTemplateDto.getExample();
          searchResponseDto.empty = true;
          searchResponseDto.siteParams = new List<GbRetailApiMetadata>{GbRetailApiMetadata.getExample()};
          searchResponseDto.debug = GbRetailApiDebugDto.getExample();
          searchResponseDto.warnings = new List<String>{''};
          searchResponseDto.includeExpandedResults = true;
          searchResponseDto.facetLimit = 0;
          searchResponseDto.redirectMetadata = new List<GbRetailApiMetadata>{GbRetailApiMetadata.getExample()};
        return searchResponseDto;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof GbRetailApiSearchResponseDto) {           
            GbRetailApiSearchResponseDto searchResponseDto = (GbRetailApiSearchResponseDto) obj;
            return this.id == searchResponseDto.id
                && this.area == searchResponseDto.area
                && this.query == searchResponseDto.query
                && this.correctedQuery == searchResponseDto.correctedQuery
                && this.biasingProfile == searchResponseDto.biasingProfile
                && this.biasingProfileAppliedId == searchResponseDto.biasingProfileAppliedId
                && this.filter == searchResponseDto.filter
                && this.originalRequest == searchResponseDto.originalRequest
                && this.records == searchResponseDto.records
                && this.totalRecordCount == searchResponseDto.totalRecordCount
                && this.metadata == searchResponseDto.metadata
                && this.pageInfo == searchResponseDto.pageInfo
                && this.availableNavigation == searchResponseDto.availableNavigation
                && this.selectedNavigation == searchResponseDto.selectedNavigation
                && this.redirect == searchResponseDto.redirect
                && this.experiments == searchResponseDto.experiments
                && this.template == searchResponseDto.template
                && this.empty == searchResponseDto.empty
                && this.siteParams == searchResponseDto.siteParams
                && this.debug == searchResponseDto.debug
                && this.warnings == searchResponseDto.warnings
                && this.includeExpandedResults == searchResponseDto.includeExpandedResults
                && this.facetLimit == searchResponseDto.facetLimit
                && this.redirectMetadata == searchResponseDto.redirectMetadata;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (area == null ? 0 : System.hashCode(area));
        hashCode = (17 * hashCode) + (query == null ? 0 : System.hashCode(query));
        hashCode = (17 * hashCode) + (correctedQuery == null ? 0 : System.hashCode(correctedQuery));
        hashCode = (17 * hashCode) + (biasingProfile == null ? 0 : System.hashCode(biasingProfile));
        hashCode = (17 * hashCode) + (biasingProfileAppliedId == null ? 0 : System.hashCode(biasingProfileAppliedId));
        hashCode = (17 * hashCode) + (filter == null ? 0 : System.hashCode(filter));
        hashCode = (17 * hashCode) + (originalRequest == null ? 0 : System.hashCode(originalRequest));
        hashCode = (17 * hashCode) + (records == null ? 0 : System.hashCode(records));
        hashCode = (17 * hashCode) + (totalRecordCount == null ? 0 : System.hashCode(totalRecordCount));
        hashCode = (17 * hashCode) + (metadata == null ? 0 : System.hashCode(metadata));
        hashCode = (17 * hashCode) + (pageInfo == null ? 0 : System.hashCode(pageInfo));
        hashCode = (17 * hashCode) + (availableNavigation == null ? 0 : System.hashCode(availableNavigation));
        hashCode = (17 * hashCode) + (selectedNavigation == null ? 0 : System.hashCode(selectedNavigation));
        hashCode = (17 * hashCode) + (redirect == null ? 0 : System.hashCode(redirect));
        hashCode = (17 * hashCode) + (experiments == null ? 0 : System.hashCode(experiments));
        hashCode = (17 * hashCode) + (template == null ? 0 : System.hashCode(template));
        hashCode = (17 * hashCode) + (empty == null ? 0 : System.hashCode(empty));
        hashCode = (17 * hashCode) + (siteParams == null ? 0 : System.hashCode(siteParams));
        hashCode = (17 * hashCode) + (debug == null ? 0 : System.hashCode(debug));
        hashCode = (17 * hashCode) + (warnings == null ? 0 : System.hashCode(warnings));
        hashCode = (17 * hashCode) + (includeExpandedResults == null ? 0 : System.hashCode(includeExpandedResults));
        hashCode = (17 * hashCode) + (facetLimit == null ? 0 : System.hashCode(facetLimit));
        hashCode = (17 * hashCode) + (redirectMetadata == null ? 0 : System.hashCode(redirectMetadata));
        return hashCode;
    }
}

